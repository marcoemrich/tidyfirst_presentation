Sure, let's consider a TypeScript example where we are calculating the area and perimeter of a rectangle. 

Here's the initial code:

```typescript
class Rectangle {
    constructor(private width: number, private height: number) {}

    calculateProperties() {
        return {
            area: this.width * this.height,
            perimeter: 2 * (this.width + this.height)
        };
    }
}
```

In the `calculateProperties` method, the expressions to calculate the area and perimeter are straightforward but could be made more readable. According to Kent Beck's advice, we should extract these expressions into separate variables that are named after the intention of the expression. Here's how we can refactor the code:

```typescript
class Rectangle {
    constructor(private width: number, private height: number) {}

    calculateProperties() {
        const area = this.width * this.height;
        const perimeter = 2 * (this.width + this.height);

        return { area, perimeter };
    }
}
```

In the refactored code, we have extracted the subexpressions into separate variables: `area` and `perimeter`. This makes the code much easier to understand and modify in the future.
